<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Anuglar on @ozgurvurgun</title><link>https://ozgurvurgun.github.io/angular/</link><description>Recent content in Anuglar on @ozgurvurgun</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>ozgurvurgun</copyright><lastBuildDate>Wed, 23 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://ozgurvurgun.github.io/angular/index.xml" rel="self" type="application/rss+xml"/><item><title>What is Angular</title><link>https://ozgurvurgun.github.io/angular/1-what-is-angular/</link><pubDate>Tue, 15 Jul 2025 00:00:00 +0000</pubDate><guid>https://ozgurvurgun.github.io/angular/1-what-is-angular/</guid><description>Angular&amp;rsquo;ın Felsefesi ve Paradigması Angular bir &amp;ldquo;framework&amp;quot;tür, bir &amp;ldquo;library&amp;rdquo; değil. Bu şu anlama gelir:
Ne yapman gerektiğini değil, nasıl yapman gerektiğini söyler. Bir yapı ve düzen silsilesi sunar. Geliştirici özgürlüğünü azaltır ama büyük ölçekli projelerde tutarlılık, test edilebilirlik ve bakım kolaylığı sağlar. Paradigması Component-Based Architecture (React ile benzer) Declarative Template Syntax (HTML içinde Angular&amp;rsquo;ın syntax&amp;rsquo;ı kullanılabilir, bildiğin template engine işte) Two-Way Data Binding (Kısaca UI ile JS arasına kablo çekmişler, değişkende bir değişiklik olunca anında UI değişiyor; aynı şekilde UI’da bir değişiklik olunca değişken güncelleniyor gibi bir şey) Dependency Injection (Bağımlılık sokuşturma) RxJS ile Reactive Programming (Kısaca bir veri kaynağında bir değişiklik olunca bu otomatik bir zincirleme reaksiyonu tetikliyor, bir şeyler yapılıyor.</description></item><item><title>Initially</title><link>https://ozgurvurgun.github.io/angular/2-initially/</link><pubDate>Mon, 14 Jul 2025 00:00:00 +0000</pubDate><guid>https://ozgurvurgun.github.io/angular/2-initially/</guid><description> Angular CLI NodeJs üzerinde çalışır öncelikle NodeJs kurmalı.
npm install -g @angular/cli cd ~/Projects # or... ng new my-app Bir kaç soru soracak sistem tasarımına göre bunlara cevap ver.
ng serve --port 4200 Hayırlı olsun Angular ayağa kalkmış olmalı. Angular CLI komutları hakkında bilgi almak istersen ng help komutunu kullan.</description></item><item><title>First Component</title><link>https://ozgurvurgun.github.io/angular/3-first-component/</link><pubDate>Mon, 14 Jul 2025 00:00:00 +0000</pubDate><guid>https://ozgurvurgun.github.io/angular/3-first-component/</guid><description>Angular ile yeni bir component oluşturmak için şu komutu verirsin
ng generate component first or
ng g c first bu kadar :)</description></item><item><title>Directive</title><link>https://ozgurvurgun.github.io/angular/4-directive/</link><pubDate>Tue, 15 Jul 2025 00:00:00 +0000</pubDate><guid>https://ozgurvurgun.github.io/angular/4-directive/</guid><description>Bir düşünelim: HTML temelde birr takım verinin semantik şekilde gösterilemsinden ibaret. Bir noktada bu statik yapıya takla attrmak istiyorsun. &amp;ldquo;Bu elementi sadece bazı durumlarda göster&amp;rdquo;, &amp;ldquo;Şuna tıklandığında şu davranış tetiklensin&amp;rdquo;, &amp;ldquo;Şu div&amp;rsquo;i mavi yap ama bazı senaryolarda yeşil olsun&amp;rdquo; falan diyorsun.
Bir noktada bu davranışların soyutlanması icap ediyor. Yani sadece ne göreceğini değil, nasıl davranacağını da kontrol etmek istiyorsun.
Bu meta programlama dediğimiz yaklaşımın ilk adımıdır:
&amp;ldquo;Kodu kodla şekillendirme işi&amp;rdquo;</description></item><item><title>Service</title><link>https://ozgurvurgun.github.io/angular/5-service/</link><pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate><guid>https://ozgurvurgun.github.io/angular/5-service/</guid><description>Angular Service Nedir? Angular Service dediğimiz şey, uygulamada ortaklaşa kullanılan işleri ve verileri tek bir yerde toplayan TypeScript sınıflarıdır. Misal:
API&amp;rsquo;den veri çekmek Bileşenler arasında veri paylaşmak Ortak bir hesaplama, filtreleme, validasyon işlemini yapmak gibi işler için service yazarsın. Böylece aynı kodu her component’te yeniden yazmazsın.
Ne Diye Service Denen Zımbırtıları Kullanıyoruz? Bir örnek: Hem AComponent hem BComponent aynı veriyi kullanmak istiyor. Gidip her birine ayrı ayrı veri koyarsan kopukluk olur.</description></item><item><title>Pipe</title><link>https://ozgurvurgun.github.io/angular/6-pipe/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://ozgurvurgun.github.io/angular/6-pipe/</guid><description>Pİie Nedir? Neden Vardır? Şöyle düşün: Bir değerin ham hali ile gösterilecek hali genellikle aynı değildir.
Tarih formatı farklı gösterilsin istersin. Sayının sonuna TL, $ gibi birim gelsin istersin. Tüm harfleri büyük/küçük yapmak istersin. listeyi filtrelemek, slice etmek istersin. Bunların hepsini component içinde yapmak mümkün. Ama zamanla kod şişer, tekrar eder, okunmaz hale gelir.
Angular burada şöyle der:
Veri değişmeyecek. Sadece görüntüsü değişecekse, o zaman bunu HTML&amp;rsquo; de hallet.
Bu yaklaşımın adı: Pipe</description></item><item><title>Guard</title><link>https://ozgurvurgun.github.io/angular/7-guard/</link><pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate><guid>https://ozgurvurgun.github.io/angular/7-guard/</guid><description>Guard Nedir? Neden Var? Şöyle düşün:
Bir apartman giriş kapısı var ama herkese açık değil. Kapıda bir güvenlik görevlisi var ve sana sorular soruyor:
Kimsin? Giriş iznin var mı? Bu kata çıkabilir misin? Bu daireye özel yetkin var mı? İşte bu Angular Gaurd tam olarak bu işi yapar. Uygulamanın rotaları arasında geçiş yapılırken kim geçebilir, kim geçemez sorularına cevap verir.
Guard Ne İş Yapar? Angular&amp;rsquo;daki Router sistemi sayesinde sayfalar arasında geziniriz (/login, /dashboard, /admin vs).</description></item></channel></rss>